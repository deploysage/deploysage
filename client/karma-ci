#!/usr/bin/env node
var _ = require('underscore');
var Karma = require('karma').Server;
var portscanner = require('portscanner');
var RailsServer = require('../support/rails_server');
var KarmaUtils = require('../support/karma_utils');

printHelp();

portscanner.findAPortNotInUse(9000, 9999, '127.0.0.1', function(error, port) {
  var KARMA_CONFIG = {
    files: commandLineSpecs(),
    singleRun: commandLineOptions()['single-run'],
    reportSlowerThan: 5000,
    browserDisconnectTolerance: 3,
    browserDisconnectTimeout: 60000,
    reporters: ['dots', 'junit'],
    junitReporter: {
      outputFile: buildArtifactsDir() + '/karma.xml',
    }
  };

  var browsers = commandLineBrowsers();
  if (browsers.length > 0) {
    KARMA_CONFIG["browsers"] = browsers;
  }

  var karma = new Karma(KarmaUtils.config(KARMA_CONFIG), function(exitCode) {
    process.exit(exitCode);
  });
  karma.start();
});

function commandLineArgs() {
  var args = process.argv.slice(2, process.argv.length);
  var groupedByOptional = _.groupBy(args, function(argument) {
    return argument.slice(0, 1) === "-";
  });
  return {options: groupedByOptional["true"], arguments: groupedByOptional["false"]};
}

function commandLineOptions() {
  var options = {};
  _.each(commandLineArgs()["options"], function(string) {
    var option = string.slice(2),
        parts = option.split('='),
        key = parts[0],
        value = parts[1] || true;

    options[key] = options[key] ? [].concat(options[key]).concat(value) : value;
  });
  return options;
}

function commandLineBrowsers() {
  return [].concat(commandLineOptions()["browser"] || []);
}

function commandLineSpecs() {
  return commandLineArgs()["arguments"];
}

function buildArtifactsDir() {
  return process.env.CIRCLE_TEST_REPORTS || 'tmp';
}

function printHelp() {
  var usageMessage = 'Usage:\n    ./karma-ci [--single-run] [--browser=<browser>] <example1Spec.js> [<example2Spec.js> <example3Spec.js>]';

  if (process.argv.length <= 2) {
    console.log(['Please provide a list of specs to run.\n', usageMessage].join(''));
    process.exit(0);
  }

  if (_.contains(['help', '-h', '--help'], process.argv[2])) {
    console.log(['Use this script to run one or more jasmine specs.\n', usageMessage].join(''));
    process.exit(0);
  }
}
